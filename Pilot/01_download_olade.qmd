---
title: "01_download"
format: html
editor: visual
---

This script works with the OLADE website.

```{r}
library(tidyverse)
library(reticulate)

# Setup chunk for Quarto / R Markdown
knitr::opts_knit$set(root.dir = "C:/Users/aathens/OneDrive - United Nations/Documentos/CEPALSTAT Data Process/cepalstat-data-upload")

# Force use of known working path
use_python("C:/Users/aathens/AppData/Local/anaconda3/python.exe", required = TRUE)

# Double check config
py_config()
```

## Define functions
```{python}
def wait_for_olade_data_ready(page):
    """
    Waits for OLADE report data to finish loading by monitoring known loading messages.
    
    Parameters:
    - page: Playwright page object
    """

    # Wait for "Espere por favor..." to appear and disappear
    espere_locator = page.locator("text=Espere por favor...")
    espere_locator.wait_for(state="visible", timeout=10000)
    espere_locator.wait_for(state="hidden", timeout=60000)
    
    # Then wait for "Cargando..." to disappear (don't wait to appear since it's typically fast)
    cargando_locator = page.locator("text=Cargando...")
    cargando_locator.wait_for(state="hidden", timeout=30000)
```


## Set up Playwright session
```{python}
from playwright.sync_api import sync_playwright
p = sync_playwright().start()
browser = p.chromium.launch(headless=False)
context = browser.new_context(accept_downloads=True)
page = context.new_page()
```

## Navigate to OLADE website for data download
```{python}
page.goto("https://sielac.olade.org/WebForms/Reportes/ReporteOD.aspx?subsectorId=0&or=720&ss=2&v=1")
```

## Choose Reporte selectors

File 1:
```{python}
# Files: Select Unidad de Información
page.click("#cbFila_I")
page.wait_for_timeout(500)
page.fill("#cbFila_I", "Unidad de Información")
page.wait_for_timeout(500)
page.keyboard.press("Enter")

# Columnas: Select Energético
page.click("#cbColumna_I")
page.wait_for_timeout(500)
page.fill("#cbColumna_I", "Energético")
page.wait_for_timeout(500)
page.keyboard.press("Enter")

# Unidad de medida: Select "TEP"
page.click("#cbUnidad_I")
page.wait_for_timeout(500)
page.locator("text='tep'").nth(0).click()
page.wait_for_timeout(500)
# page.keyboard.press("Enter")
```


File 2:
```{python}
page.goto("https://sielac.olade.org/WebForms/Reportes/ReporteOD.aspx?subsectorId=0&or=720&ss=2&v=1")

# Files: Select Actividad
page.click("#cbFila_I")
page.wait_for_timeout(500)
page.fill("#cbFila_I", "Actividad")
page.wait_for_timeout(500)
page.keyboard.press("Enter")

# Columnas: Select "Unidad de Información"
page.click("#cbColumna_I")
page.wait_for_timeout(500)
page.fill("#cbColumna_I", "Unidad de Información")
page.wait_for_timeout(500)
page.keyboard.press("Enter")

# Unidad de medida: Select "10^3 bep"
page.click("#cbUnidad_I")
page.wait_for_timeout(500)
page.locator("text='10³ bep'").nth(0).click()
page.wait_for_timeout(500)
# page.keyboard.press("Enter")
```

File 3:


File 4:
```{python}
page.goto("https://sielac.olade.org/WebForms/Reportes/ReporteOD.aspx?subsectorId=0&or=720&ss=2&v=1")

# Files: Select Unidad de Información
page.click("#cbFila_I")
page.wait_for_timeout(500)
page.fill("#cbFila_I", "Unidad de Información")
page.wait_for_timeout(500)
page.keyboard.press("Enter")

# Columnas: Select Tiempo
page.click("#cbColumna_I")
page.wait_for_timeout(500)
page.fill("#cbColumna_I", "Tiempo")
page.wait_for_timeout(500)
page.keyboard.press("Enter")

# Unidad de medida: Select "Unidad de origen"
page.click("#cbUnidad_I")
page.wait_for_timeout(500)
page.locator("text='Unidad de origen'").nth(0).click()
page.wait_for_timeout(500)
# page.keyboard.press("Enter")
```

File 5:
```{python}
page.goto("https://sielac.olade.org/WebForms/Reportes/ReporteOD.aspx?subsectorId=0&or=720&ss=2&v=1")

# Files: Select Unidad de Información
page.click("#cbFila_I")
page.wait_for_timeout(500)
page.fill("#cbFila_I", "Unidad de Información")
page.wait_for_timeout(500)
page.keyboard.press("Enter")

# Columnas: Select Energético
page.click("#cbColumna_I")
page.wait_for_timeout(500)
page.fill("#cbColumna_I", "Energético")
page.wait_for_timeout(500)
page.keyboard.press("Enter")

# Unidad de medida: Select "Unidad de origen"
page.click("#cbUnidad_I")
page.wait_for_timeout(500)
page.locator("text='Unidad de origen'").nth(0).click()
page.wait_for_timeout(500)
# page.keyboard.press("Enter")
```

## Download Excel file

```{python}
with page.expect_download() as download_info: # Tells playwright to watch for a download and catch download_info when it begins
    page.click("text=Descargar excel")  # Clicks element with visible text that's exactly "Descargar excel"
download = download_info.value # Retrieves download object
download.save_as("Pilot/Data/Raw/olade_data.xlsx") # Saves downloaded file with new name
#print("Download complete.")
```

## Close browser

```{python}
browser.close()
p.stop()
```


## Load data in R